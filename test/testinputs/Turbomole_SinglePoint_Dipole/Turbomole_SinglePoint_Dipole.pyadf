
#TODO: check these values compared to Dalton and NWChem

def check_results_hf (testobj, energy, dipole_vect, dipole_magn):
    
    testobj.assertAlmostEqual(energy,        -76.021573326, 6)                   

    testobj.assertAlmostEqual(dipole_magn,     0.802843014, 5)               
    testobj.assertAlmostEqual(dipole_vect[0],  0.778187, 4)           
    testobj.assertAlmostEqual(dipole_vect[1],  0.180580, 4)            
    testobj.assertAlmostEqual(dipole_vect[2], -0.079749, 4)         

def check_results_lda (testobj, energy, dipole_vect, dipole_magn):

    testobj.assertAlmostEqual(energy,        -75.853880774, 6)     

    testobj.assertAlmostEqual(dipole_magn,     0.756409550, 5)  
    testobj.assertAlmostEqual(dipole_vect[0],  0.733187, 4)           
    testobj.assertAlmostEqual(dipole_vect[1],  0.170326, 4)            
    testobj.assertAlmostEqual(dipole_vect[2], -0.074708, 4)             

def check_results_bp86 (testobj, energy, dipole_vect, dipole_magn):

    testobj.assertAlmostEqual(energy,        -76.4238232760, 6)

    testobj.assertAlmostEqual(dipole_magn,     0.726892621, 5)                   
    testobj.assertAlmostEqual(dipole_vect[0],  0.704546, 4)             
    testobj.assertAlmostEqual(dipole_vect[1],  0.163877, 4)             
    testobj.assertAlmostEqual(dipole_vect[2], -0.071639, 4)          

_verbose_level = 5

h2o = molecule (os.path.join(pyadfenv.outdir, 'H2O.xyz'))

# HF single point calculation

settings = TurbomoleSinglePointSettings(verbose_level=_verbose_level)
settings.set_basis_set('cc-pVDZ')
settings.set_ri(False)
results = TurbomoleSinglePointJob(h2o, method='hf', settings=settings).run()

energy = results.get_energy()
dipole_vect = results.get_dipole_vector ()
dipole_magn = results.get_dipole_magnitude ()

check_results_hf (testobj, energy, dipole_vect, dipole_magn)

# LDA single point calculation

settings = TurbomoleSinglePointSettings(verbose_level=_verbose_level)
settings.set_basis_set('cc-pVDZ')
settings.set_dft_functional('s-vwn')
settings.set_ri(False)
results = TurbomoleSinglePointJob(h2o, method='dft', settings=settings).run()

energy = results.get_energy()
dipole_vect = results.get_dipole_vector ()
dipole_magn = results.get_dipole_magnitude ()

check_results_lda (testobj, energy, dipole_vect, dipole_magn)
       
# BP86 single point calculation

settings = TurbomoleSinglePointSettings(verbose_level=_verbose_level)
settings.set_basis_set('cc-pVDZ')
settings.set_dft_functional('b-p')
settings.set_ri(False)
results = TurbomoleSinglePointJob(h2o, method='dft', settings=settings).run()

energy = results.get_energy()
dipole_vect = results.get_dipole_vector ()
dipole_magn = results.get_dipole_magnitude ()

check_results_bp86 (testobj, energy, dipole_vect, dipole_magn)
       
